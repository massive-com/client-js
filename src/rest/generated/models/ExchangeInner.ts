/* tslint:disable */
/* eslint-disable */
/**
 * Polygon API
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ExchangeInner
 */
export interface ExchangeInner {
    /**
     * A unique identifier for the exchange internal to Polygon.io.  This is not an industry code or ISO standard.
     * @type {string}
     * @memberof ExchangeInner
     */
    code?: string;
    /**
     * The ID of the exchange.
     * @type {number}
     * @memberof ExchangeInner
     */
    id?: number;
    /**
     * The market data type that this exchange contains.
     * @type {string}
     * @memberof ExchangeInner
     */
    market?: string;
    /**
     * The Market Identification Code or MIC as defined in ISO 10383 (<a rel="nofollow" target="_blank" href="https://en.wikipedia.org/wiki/Market_Identifier_Code">https://en.wikipedia.org/wiki/Market_Identifier_Code</a>).
     * @type {string}
     * @memberof ExchangeInner
     */
    mic?: string;
    /**
     * The name of the exchange.
     * @type {string}
     * @memberof ExchangeInner
     */
    name?: string;
    /**
     * The tape id of the exchange.
     * @type {string}
     * @memberof ExchangeInner
     */
    tape?: string;
    /**
     * The type of exchange.
     * - TRF = Trade Reporting Facility
     * - exchange = Reporting exchange on the tape
     * 
     * @type {string}
     * @memberof ExchangeInner
     */
    type?: string;
}

/**
 * Check if a given object implements the ExchangeInner interface.
 */
export function instanceOfExchangeInner(value: object): value is ExchangeInner {
    return true;
}

export function ExchangeInnerFromJSON(json: any): ExchangeInner {
    return ExchangeInnerFromJSONTyped(json, false);
}

export function ExchangeInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExchangeInner {
    if (json == null) {
        return json;
    }
    return {
        
        'code': json['code'] == null ? undefined : json['code'],
        'id': json['id'] == null ? undefined : json['id'],
        'market': json['market'] == null ? undefined : json['market'],
        'mic': json['mic'] == null ? undefined : json['mic'],
        'name': json['name'] == null ? undefined : json['name'],
        'tape': json['tape'] == null ? undefined : json['tape'],
        'type': json['type'] == null ? undefined : json['type'],
    };
}

export function ExchangeInnerToJSON(json: any): ExchangeInner {
    return ExchangeInnerToJSONTyped(json, false);
}

export function ExchangeInnerToJSONTyped(value?: ExchangeInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'code': value['code'],
        'id': value['id'],
        'market': value['market'],
        'mic': value['mic'],
        'name': value['name'],
        'tape': value['tape'],
        'type': value['type'],
    };
}

