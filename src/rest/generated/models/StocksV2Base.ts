/* tslint:disable */
/* eslint-disable */
/**
 * Polygon API
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StocksV2Base
 */
export interface StocksV2Base {
    /**
     * The exchange symbol that this item is traded under.
     * @type {string}
     * @memberof StocksV2Base
     */
    t: string;
    /**
     * The nanosecond accuracy TRF(Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this message.
     * @type {number}
     * @memberof StocksV2Base
     */
    f: number;
    /**
     * The sequence number represents the sequence in which message events happened.
     * These are increasing and unique per ticker symbol, but will not always be
     * sequential (e.g., 1, 2, 6, 9, 10, 11).
     * 
     * @type {number}
     * @memberof StocksV2Base
     */
    q: number;
    /**
     * The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this message from the exchange which produced it.
     * @type {number}
     * @memberof StocksV2Base
     */
    t: number;
    /**
     * The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange.
     * @type {number}
     * @memberof StocksV2Base
     */
    y: number;
}

/**
 * Check if a given object implements the StocksV2Base interface.
 */
export function instanceOfStocksV2Base(value: object): value is StocksV2Base {
    if (!('t' in value) || value['t'] === undefined) return false;
    if (!('f' in value) || value['f'] === undefined) return false;
    if (!('q' in value) || value['q'] === undefined) return false;
    if (!('t' in value) || value['t'] === undefined) return false;
    if (!('y' in value) || value['y'] === undefined) return false;
    return true;
}

export function StocksV2BaseFromJSON(json: any): StocksV2Base {
    return StocksV2BaseFromJSONTyped(json, false);
}

export function StocksV2BaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): StocksV2Base {
    if (json == null) {
        return json;
    }
    return {
        
        't': json['T'],
        'f': json['f'],
        'q': json['q'],
        't': json['t'],
        'y': json['y'],
    };
}

export function StocksV2BaseToJSON(json: any): StocksV2Base {
    return StocksV2BaseToJSONTyped(json, false);
}

export function StocksV2BaseToJSONTyped(value?: StocksV2Base | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'T': value['t'],
        'f': value['f'],
        'q': value['q'],
        't': value['t'],
        'y': value['y'],
    };
}

