/* tslint:disable */
/* eslint-disable */
/**
 * Polygon API
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IndicesOpenClose
 */
export interface IndicesOpenClose {
    /**
     * The close value of the ticker symbol in after hours trading.
     * @type {number}
     * @memberof IndicesOpenClose
     */
    afterHours?: number;
    /**
     * The close value for the symbol in the given time period.
     * @type {number}
     * @memberof IndicesOpenClose
     */
    close: number;
    /**
     * The requested date.
     * @type {Date}
     * @memberof IndicesOpenClose
     */
    from: Date;
    /**
     * The highest value for the symbol in the given time period.
     * @type {number}
     * @memberof IndicesOpenClose
     */
    high: number;
    /**
     * The lowest value for the symbol in the given time period.
     * @type {number}
     * @memberof IndicesOpenClose
     */
    low: number;
    /**
     * The open value for the symbol in the given time period.
     * @type {number}
     * @memberof IndicesOpenClose
     */
    open: number;
    /**
     * The open value of the ticker symbol in pre-market trading.
     * @type {number}
     * @memberof IndicesOpenClose
     */
    preMarket?: number;
    /**
     * The status of this request's response.
     * @type {string}
     * @memberof IndicesOpenClose
     */
    status: string;
    /**
     * The exchange symbol that this item is traded under.
     * @type {string}
     * @memberof IndicesOpenClose
     */
    symbol: string;
}

/**
 * Check if a given object implements the IndicesOpenClose interface.
 */
export function instanceOfIndicesOpenClose(value: object): value is IndicesOpenClose {
    if (!('close' in value) || value['close'] === undefined) return false;
    if (!('from' in value) || value['from'] === undefined) return false;
    if (!('high' in value) || value['high'] === undefined) return false;
    if (!('low' in value) || value['low'] === undefined) return false;
    if (!('open' in value) || value['open'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('symbol' in value) || value['symbol'] === undefined) return false;
    return true;
}

export function IndicesOpenCloseFromJSON(json: any): IndicesOpenClose {
    return IndicesOpenCloseFromJSONTyped(json, false);
}

export function IndicesOpenCloseFromJSONTyped(json: any, ignoreDiscriminator: boolean): IndicesOpenClose {
    if (json == null) {
        return json;
    }
    return {
        
        'afterHours': json['afterHours'] == null ? undefined : json['afterHours'],
        'close': json['close'],
        'from': (new Date(json['from'])),
        'high': json['high'],
        'low': json['low'],
        'open': json['open'],
        'preMarket': json['preMarket'] == null ? undefined : json['preMarket'],
        'status': json['status'],
        'symbol': json['symbol'],
    };
}

export function IndicesOpenCloseToJSON(json: any): IndicesOpenClose {
    return IndicesOpenCloseToJSONTyped(json, false);
}

export function IndicesOpenCloseToJSONTyped(value?: IndicesOpenClose | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'afterHours': value['afterHours'],
        'close': value['close'],
        'from': ((value['from']).toISOString().substring(0,10)),
        'high': value['high'],
        'low': value['low'],
        'open': value['open'],
        'preMarket': value['preMarket'],
        'status': value['status'],
        'symbol': value['symbol'],
    };
}

