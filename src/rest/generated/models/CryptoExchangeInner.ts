/* tslint:disable */
/* eslint-disable */
/**
 * Polygon API
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CryptoExchangeInner
 */
export interface CryptoExchangeInner {
    /**
     * The exchange ID. See <a href="https://polygon.io/docs/stocks/get_v3_reference_exchanges" alt="Exchanges">Exchanges</a> for Polygon.io's mapping of exchange IDs.
     * @type {number}
     * @memberof CryptoExchangeInner
     */
    id: number;
    /**
     * Market data type this exchange contains ( crypto only currently )
     * @type {string}
     * @memberof CryptoExchangeInner
     */
    market: string;
    /**
     * Name of the exchange
     * @type {string}
     * @memberof CryptoExchangeInner
     */
    name: string;
    /**
     * Type of exchange feed
     * @type {string}
     * @memberof CryptoExchangeInner
     */
    type: string;
    /**
     * URL of this exchange
     * @type {string}
     * @memberof CryptoExchangeInner
     */
    url: string;
}

/**
 * Check if a given object implements the CryptoExchangeInner interface.
 */
export function instanceOfCryptoExchangeInner(value: object): value is CryptoExchangeInner {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('market' in value) || value['market'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    return true;
}

export function CryptoExchangeInnerFromJSON(json: any): CryptoExchangeInner {
    return CryptoExchangeInnerFromJSONTyped(json, false);
}

export function CryptoExchangeInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CryptoExchangeInner {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'market': json['market'],
        'name': json['name'],
        'type': json['type'],
        'url': json['url'],
    };
}

export function CryptoExchangeInnerToJSON(json: any): CryptoExchangeInner {
    return CryptoExchangeInnerToJSONTyped(json, false);
}

export function CryptoExchangeInnerToJSONTyped(value?: CryptoExchangeInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'market': value['market'],
        'name': value['name'],
        'type': value['type'],
        'url': value['url'],
    };
}

