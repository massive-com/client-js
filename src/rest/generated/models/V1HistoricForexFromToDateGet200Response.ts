/* tslint:disable */
/* eslint-disable */
/**
 * Polygon API
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { V1HistoricForexFromToDateGet200ResponseAllOfTicksInner } from './V1HistoricForexFromToDateGet200ResponseAllOfTicksInner';
import {
    V1HistoricForexFromToDateGet200ResponseAllOfTicksInnerFromJSON,
    V1HistoricForexFromToDateGet200ResponseAllOfTicksInnerFromJSONTyped,
    V1HistoricForexFromToDateGet200ResponseAllOfTicksInnerToJSON,
    V1HistoricForexFromToDateGet200ResponseAllOfTicksInnerToJSONTyped,
} from './V1HistoricForexFromToDateGet200ResponseAllOfTicksInner';

/**
 * 
 * @export
 * @interface V1HistoricForexFromToDateGet200Response
 */
export interface V1HistoricForexFromToDateGet200Response {
    /**
     * The status of this request's response.
     * @type {string}
     * @memberof V1HistoricForexFromToDateGet200Response
     */
    status: string;
    /**
     * The date that was evaluated from the request.
     * @type {Date}
     * @memberof V1HistoricForexFromToDateGet200Response
     */
    day: Date;
    /**
     * A map for shortened result keys.
     * @type {object}
     * @memberof V1HistoricForexFromToDateGet200Response
     */
    map: object;
    /**
     * The milliseconds of latency for the query results.
     * @type {number}
     * @memberof V1HistoricForexFromToDateGet200Response
     */
    msLatency: number;
    /**
     * The currency pair that was evaluated from the request.
     * @type {string}
     * @memberof V1HistoricForexFromToDateGet200Response
     */
    pair: string;
    /**
     * 
     * @type {Array<V1HistoricForexFromToDateGet200ResponseAllOfTicksInner>}
     * @memberof V1HistoricForexFromToDateGet200Response
     */
    ticks: Array<V1HistoricForexFromToDateGet200ResponseAllOfTicksInner>;
}

/**
 * Check if a given object implements the V1HistoricForexFromToDateGet200Response interface.
 */
export function instanceOfV1HistoricForexFromToDateGet200Response(value: object): value is V1HistoricForexFromToDateGet200Response {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('day' in value) || value['day'] === undefined) return false;
    if (!('map' in value) || value['map'] === undefined) return false;
    if (!('msLatency' in value) || value['msLatency'] === undefined) return false;
    if (!('pair' in value) || value['pair'] === undefined) return false;
    if (!('ticks' in value) || value['ticks'] === undefined) return false;
    return true;
}

export function V1HistoricForexFromToDateGet200ResponseFromJSON(json: any): V1HistoricForexFromToDateGet200Response {
    return V1HistoricForexFromToDateGet200ResponseFromJSONTyped(json, false);
}

export function V1HistoricForexFromToDateGet200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1HistoricForexFromToDateGet200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'status': json['status'],
        'day': (new Date(json['day'])),
        'map': json['map'],
        'msLatency': json['msLatency'],
        'pair': json['pair'],
        'ticks': ((json['ticks'] as Array<any>).map(V1HistoricForexFromToDateGet200ResponseAllOfTicksInnerFromJSON)),
    };
}

export function V1HistoricForexFromToDateGet200ResponseToJSON(json: any): V1HistoricForexFromToDateGet200Response {
    return V1HistoricForexFromToDateGet200ResponseToJSONTyped(json, false);
}

export function V1HistoricForexFromToDateGet200ResponseToJSONTyped(value?: V1HistoricForexFromToDateGet200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': value['status'],
        'day': ((value['day']).toISOString().substring(0,10)),
        'map': value['map'],
        'msLatency': value['msLatency'],
        'pair': value['pair'],
        'ticks': ((value['ticks'] as Array<any>).map(V1HistoricForexFromToDateGet200ResponseAllOfTicksInnerToJSON)),
    };
}

