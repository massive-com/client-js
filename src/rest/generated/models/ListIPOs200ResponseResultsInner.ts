/* tslint:disable */
/* eslint-disable */
/**
 * Polygon API
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ListIPOs200ResponseResultsInner
 */
export interface ListIPOs200ResponseResultsInner {
    /**
     * The date when the IPO event was announced.
     * @type {Date}
     * @memberof ListIPOs200ResponseResultsInner
     */
    announcedDate?: Date;
    /**
     * Underlying currency of the security.
     * @type {string}
     * @memberof ListIPOs200ResponseResultsInner
     */
    currencyCode?: string;
    /**
     * The price set by the company and its underwriters before the IPO goes live.
     * @type {number}
     * @memberof ListIPOs200ResponseResultsInner
     */
    finalIssuePrice?: number;
    /**
     * The highest price within the IPO price range that the company might use to price the shares.
     * @type {number}
     * @memberof ListIPOs200ResponseResultsInner
     */
    highestOfferPrice?: number;
    /**
     * The status of the IPO event. IPO events start out as status "rumor" or "pending". On listing day, the status changes to "new". After the listing day, the status changes to "history".
     * 
     * The status "direct_listing_process" corresponds to a type of offering where, instead of going through all the IPO processes, the company decides to list its shares directly on an exchange, without using an investment bank or other intermediaries. This is called a direct listing, direct placement, or direct public offering (DPO).
     * @type {string}
     * @memberof ListIPOs200ResponseResultsInner
     */
    ipoStatus: ListIPOs200ResponseResultsInnerIpoStatusEnum;
    /**
     * International Securities Identification Number. This is a unique twelve-digit code that is assigned to every security issuance in the world.
     * @type {string}
     * @memberof ListIPOs200ResponseResultsInner
     */
    isin?: string;
    /**
     * Name of issuer.
     * @type {string}
     * @memberof ListIPOs200ResponseResultsInner
     */
    issuerName: string;
    /**
     * The date when the IPO event was last modified.
     * @type {Date}
     * @memberof ListIPOs200ResponseResultsInner
     */
    lastUpdated: Date;
    /**
     * First trading date for the newly listed entity.
     * @type {Date}
     * @memberof ListIPOs200ResponseResultsInner
     */
    listingDate?: Date;
    /**
     * The minimum number of shares that can be bought or sold in a single transaction.
     * @type {number}
     * @memberof ListIPOs200ResponseResultsInner
     */
    lotSize?: number;
    /**
     * The lowest price within the IPO price range that the company is willing to offer its shares to investors.
     * @type {number}
     * @memberof ListIPOs200ResponseResultsInner
     */
    lowestOfferPrice?: number;
    /**
     * The upper limit of the shares that the company is offering to investors.
     * @type {number}
     * @memberof ListIPOs200ResponseResultsInner
     */
    maxSharesOffered?: number;
    /**
     * The lower limit of shares that the company is willing to sell in the IPO.
     * @type {number}
     * @memberof ListIPOs200ResponseResultsInner
     */
    minSharesOffered?: number;
    /**
     * Market Identifier Code (MIC) of the primary exchange where the security is listed. The Market Identifier Code (MIC) (ISO 10383) is a unique identification code used to identify securities trading exchanges, regulated and non-regulated trading markets.
     * @type {string}
     * @memberof ListIPOs200ResponseResultsInner
     */
    primaryExchange?: string;
    /**
     * Description of the security.
     * @type {string}
     * @memberof ListIPOs200ResponseResultsInner
     */
    securityDescription?: string;
    /**
     * The classification of the stock. For example, "CS" stands for Common Stock.
     * @type {string}
     * @memberof ListIPOs200ResponseResultsInner
     */
    securityType: string;
    /**
     * The total number of shares that the company has issued and are held by investors.
     * @type {number}
     * @memberof ListIPOs200ResponseResultsInner
     */
    sharesOutstanding?: number;
    /**
     * The ticker symbol of the IPO event.
     * @type {string}
     * @memberof ListIPOs200ResponseResultsInner
     */
    ticker: string;
    /**
     * The total amount raised by the company for IPO.
     * @type {number}
     * @memberof ListIPOs200ResponseResultsInner
     */
    totalOfferSize?: number;
    /**
     * This is a unique nine-character alphanumeric code that identifies a North American financial security for the purposes of facilitating clearing and settlement of trades.
     * @type {string}
     * @memberof ListIPOs200ResponseResultsInner
     */
    usCode?: string;
}


/**
 * @export
 */
export const ListIPOs200ResponseResultsInnerIpoStatusEnum = {
    DirectListingProcess: 'direct_listing_process',
    History: 'history',
    New: 'new',
    Pending: 'pending',
    Postponed: 'postponed',
    Rumor: 'rumor',
    Withdrawn: 'withdrawn'
} as const;
export type ListIPOs200ResponseResultsInnerIpoStatusEnum = typeof ListIPOs200ResponseResultsInnerIpoStatusEnum[keyof typeof ListIPOs200ResponseResultsInnerIpoStatusEnum];


/**
 * Check if a given object implements the ListIPOs200ResponseResultsInner interface.
 */
export function instanceOfListIPOs200ResponseResultsInner(value: object): value is ListIPOs200ResponseResultsInner {
    if (!('ipoStatus' in value) || value['ipoStatus'] === undefined) return false;
    if (!('issuerName' in value) || value['issuerName'] === undefined) return false;
    if (!('lastUpdated' in value) || value['lastUpdated'] === undefined) return false;
    if (!('securityType' in value) || value['securityType'] === undefined) return false;
    if (!('ticker' in value) || value['ticker'] === undefined) return false;
    return true;
}

export function ListIPOs200ResponseResultsInnerFromJSON(json: any): ListIPOs200ResponseResultsInner {
    return ListIPOs200ResponseResultsInnerFromJSONTyped(json, false);
}

export function ListIPOs200ResponseResultsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListIPOs200ResponseResultsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'announcedDate': json['announced_date'] == null ? undefined : (new Date(json['announced_date'])),
        'currencyCode': json['currency_code'] == null ? undefined : json['currency_code'],
        'finalIssuePrice': json['final_issue_price'] == null ? undefined : json['final_issue_price'],
        'highestOfferPrice': json['highest_offer_price'] == null ? undefined : json['highest_offer_price'],
        'ipoStatus': json['ipo_status'],
        'isin': json['isin'] == null ? undefined : json['isin'],
        'issuerName': json['issuer_name'],
        'lastUpdated': (new Date(json['last_updated'])),
        'listingDate': json['listing_date'] == null ? undefined : (new Date(json['listing_date'])),
        'lotSize': json['lot_size'] == null ? undefined : json['lot_size'],
        'lowestOfferPrice': json['lowest_offer_price'] == null ? undefined : json['lowest_offer_price'],
        'maxSharesOffered': json['max_shares_offered'] == null ? undefined : json['max_shares_offered'],
        'minSharesOffered': json['min_shares_offered'] == null ? undefined : json['min_shares_offered'],
        'primaryExchange': json['primary_exchange'] == null ? undefined : json['primary_exchange'],
        'securityDescription': json['security_description'] == null ? undefined : json['security_description'],
        'securityType': json['security_type'],
        'sharesOutstanding': json['shares_outstanding'] == null ? undefined : json['shares_outstanding'],
        'ticker': json['ticker'],
        'totalOfferSize': json['total_offer_size'] == null ? undefined : json['total_offer_size'],
        'usCode': json['us_code'] == null ? undefined : json['us_code'],
    };
}

export function ListIPOs200ResponseResultsInnerToJSON(json: any): ListIPOs200ResponseResultsInner {
    return ListIPOs200ResponseResultsInnerToJSONTyped(json, false);
}

export function ListIPOs200ResponseResultsInnerToJSONTyped(value?: ListIPOs200ResponseResultsInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'announced_date': value['announcedDate'] == null ? undefined : ((value['announcedDate']).toISOString().substring(0,10)),
        'currency_code': value['currencyCode'],
        'final_issue_price': value['finalIssuePrice'],
        'highest_offer_price': value['highestOfferPrice'],
        'ipo_status': value['ipoStatus'],
        'isin': value['isin'],
        'issuer_name': value['issuerName'],
        'last_updated': ((value['lastUpdated']).toISOString().substring(0,10)),
        'listing_date': value['listingDate'] == null ? undefined : ((value['listingDate']).toISOString().substring(0,10)),
        'lot_size': value['lotSize'],
        'lowest_offer_price': value['lowestOfferPrice'],
        'max_shares_offered': value['maxSharesOffered'],
        'min_shares_offered': value['minSharesOffered'],
        'primary_exchange': value['primaryExchange'],
        'security_description': value['securityDescription'],
        'security_type': value['securityType'],
        'shares_outstanding': value['sharesOutstanding'],
        'ticker': value['ticker'],
        'total_offer_size': value['totalOfferSize'],
        'us_code': value['usCode'],
    };
}

