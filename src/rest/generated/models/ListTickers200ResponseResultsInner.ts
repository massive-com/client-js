/* tslint:disable */
/* eslint-disable */
/**
 * Polygon API
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ListTickers200ResponseResultsInner
 */
export interface ListTickers200ResponseResultsInner {
    /**
     * Whether or not the asset is actively traded. False means the asset has been delisted.
     * @type {boolean}
     * @memberof ListTickers200ResponseResultsInner
     */
    active?: boolean;
    /**
     * The CIK number for this ticker. Find more information [here](https://en.wikipedia.org/wiki/Central_Index_Key).
     * @type {string}
     * @memberof ListTickers200ResponseResultsInner
     */
    cik?: string;
    /**
     * The composite OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/about/figi)
     * @type {string}
     * @memberof ListTickers200ResponseResultsInner
     */
    compositeFigi?: string;
    /**
     * The name of the currency that this asset is traded with.
     * @type {string}
     * @memberof ListTickers200ResponseResultsInner
     */
    currencyName?: string;
    /**
     * The last date that the asset was traded.
     * @type {Date}
     * @memberof ListTickers200ResponseResultsInner
     */
    delistedUtc?: Date;
    /**
     * The information is accurate up to this time.
     * @type {Date}
     * @memberof ListTickers200ResponseResultsInner
     */
    lastUpdatedUtc?: Date;
    /**
     * The locale of the asset.
     * @type {string}
     * @memberof ListTickers200ResponseResultsInner
     */
    locale: ListTickers200ResponseResultsInnerLocaleEnum;
    /**
     * The market type of the asset.
     * @type {string}
     * @memberof ListTickers200ResponseResultsInner
     */
    market: ListTickers200ResponseResultsInnerMarketEnum;
    /**
     * The name of the asset. For stocks/equities this will be the companies registered name. For crypto/fx this will be the name of the currency or coin pair.
     * @type {string}
     * @memberof ListTickers200ResponseResultsInner
     */
    name: string;
    /**
     * The ISO code of the primary listing exchange for this asset.
     * @type {string}
     * @memberof ListTickers200ResponseResultsInner
     */
    primaryExchange?: string;
    /**
     * The share Class OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/about/figi)
     * @type {string}
     * @memberof ListTickers200ResponseResultsInner
     */
    shareClassFigi?: string;
    /**
     * The exchange symbol that this item is traded under.
     * @type {string}
     * @memberof ListTickers200ResponseResultsInner
     */
    ticker: string;
    /**
     * The type of the asset. Find the types that we support via our [Ticker Types API](https://polygon.io/docs/stocks/get_v3_reference_tickers_types).
     * @type {string}
     * @memberof ListTickers200ResponseResultsInner
     */
    type?: string;
}


/**
 * @export
 */
export const ListTickers200ResponseResultsInnerLocaleEnum = {
    Us: 'us',
    Global: 'global'
} as const;
export type ListTickers200ResponseResultsInnerLocaleEnum = typeof ListTickers200ResponseResultsInnerLocaleEnum[keyof typeof ListTickers200ResponseResultsInnerLocaleEnum];

/**
 * @export
 */
export const ListTickers200ResponseResultsInnerMarketEnum = {
    Stocks: 'stocks',
    Crypto: 'crypto',
    Fx: 'fx',
    Otc: 'otc',
    Indices: 'indices'
} as const;
export type ListTickers200ResponseResultsInnerMarketEnum = typeof ListTickers200ResponseResultsInnerMarketEnum[keyof typeof ListTickers200ResponseResultsInnerMarketEnum];


/**
 * Check if a given object implements the ListTickers200ResponseResultsInner interface.
 */
export function instanceOfListTickers200ResponseResultsInner(value: object): value is ListTickers200ResponseResultsInner {
    if (!('locale' in value) || value['locale'] === undefined) return false;
    if (!('market' in value) || value['market'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('ticker' in value) || value['ticker'] === undefined) return false;
    return true;
}

export function ListTickers200ResponseResultsInnerFromJSON(json: any): ListTickers200ResponseResultsInner {
    return ListTickers200ResponseResultsInnerFromJSONTyped(json, false);
}

export function ListTickers200ResponseResultsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListTickers200ResponseResultsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'active': json['active'] == null ? undefined : json['active'],
        'cik': json['cik'] == null ? undefined : json['cik'],
        'compositeFigi': json['composite_figi'] == null ? undefined : json['composite_figi'],
        'currencyName': json['currency_name'] == null ? undefined : json['currency_name'],
        'delistedUtc': json['delisted_utc'] == null ? undefined : (new Date(json['delisted_utc'])),
        'lastUpdatedUtc': json['last_updated_utc'] == null ? undefined : (new Date(json['last_updated_utc'])),
        'locale': json['locale'],
        'market': json['market'],
        'name': json['name'],
        'primaryExchange': json['primary_exchange'] == null ? undefined : json['primary_exchange'],
        'shareClassFigi': json['share_class_figi'] == null ? undefined : json['share_class_figi'],
        'ticker': json['ticker'],
        'type': json['type'] == null ? undefined : json['type'],
    };
}

export function ListTickers200ResponseResultsInnerToJSON(json: any): ListTickers200ResponseResultsInner {
    return ListTickers200ResponseResultsInnerToJSONTyped(json, false);
}

export function ListTickers200ResponseResultsInnerToJSONTyped(value?: ListTickers200ResponseResultsInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'active': value['active'],
        'cik': value['cik'],
        'composite_figi': value['compositeFigi'],
        'currency_name': value['currencyName'],
        'delisted_utc': value['delistedUtc'] == null ? undefined : ((value['delistedUtc']).toISOString()),
        'last_updated_utc': value['lastUpdatedUtc'] == null ? undefined : ((value['lastUpdatedUtc']).toISOString()),
        'locale': value['locale'],
        'market': value['market'],
        'name': value['name'],
        'primary_exchange': value['primaryExchange'],
        'share_class_figi': value['shareClassFigi'],
        'ticker': value['ticker'],
        'type': value['type'],
    };
}

