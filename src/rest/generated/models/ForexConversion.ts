/* tslint:disable */
/* eslint-disable */
/**
 * Polygon API
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ForexConversionLast } from './ForexConversionLast';
import {
    ForexConversionLastFromJSON,
    ForexConversionLastFromJSONTyped,
    ForexConversionLastToJSON,
    ForexConversionLastToJSONTyped,
} from './ForexConversionLast';

/**
 * 
 * @export
 * @interface ForexConversion
 */
export interface ForexConversion {
    /**
     * The result of the conversion.
     * @type {number}
     * @memberof ForexConversion
     */
    converted: number;
    /**
     * The "from" currency symbol.
     * @type {string}
     * @memberof ForexConversion
     */
    from: string;
    /**
     * The amount to convert.
     * @type {number}
     * @memberof ForexConversion
     */
    initialAmount: number;
    /**
     * 
     * @type {ForexConversionLast}
     * @memberof ForexConversion
     */
    last?: ForexConversionLast;
    /**
     * The "to" currency symbol.
     * @type {string}
     * @memberof ForexConversion
     */
    to: string;
}

/**
 * Check if a given object implements the ForexConversion interface.
 */
export function instanceOfForexConversion(value: object): value is ForexConversion {
    if (!('converted' in value) || value['converted'] === undefined) return false;
    if (!('from' in value) || value['from'] === undefined) return false;
    if (!('initialAmount' in value) || value['initialAmount'] === undefined) return false;
    if (!('to' in value) || value['to'] === undefined) return false;
    return true;
}

export function ForexConversionFromJSON(json: any): ForexConversion {
    return ForexConversionFromJSONTyped(json, false);
}

export function ForexConversionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ForexConversion {
    if (json == null) {
        return json;
    }
    return {
        
        'converted': json['converted'],
        'from': json['from'],
        'initialAmount': json['initialAmount'],
        'last': json['last'] == null ? undefined : ForexConversionLastFromJSON(json['last']),
        'to': json['to'],
    };
}

export function ForexConversionToJSON(json: any): ForexConversion {
    return ForexConversionToJSONTyped(json, false);
}

export function ForexConversionToJSONTyped(value?: ForexConversion | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'converted': value['converted'],
        'from': value['from'],
        'initialAmount': value['initialAmount'],
        'last': ForexConversionLastToJSON(value['last']),
        'to': value['to'],
    };
}

