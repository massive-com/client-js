/* tslint:disable */
/* eslint-disable */
/**
 * Polygon API
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface QuotesOptions200ResponseResultsInner
 */
export interface QuotesOptions200ResponseResultsInner {
    /**
     * The ask exchange ID
     * @type {number}
     * @memberof QuotesOptions200ResponseResultsInner
     */
    askExchange?: number;
    /**
     * The ask price.
     * @type {number}
     * @memberof QuotesOptions200ResponseResultsInner
     */
    askPrice?: number;
    /**
     * The ask size. This represents the number of round lot orders at the given ask price. The normal round lot size is 100 shares. An ask size of 2 means there are 200 shares available to purchase at the given ask price.
     * @type {number}
     * @memberof QuotesOptions200ResponseResultsInner
     */
    askSize?: number;
    /**
     * The bid exchange ID
     * @type {number}
     * @memberof QuotesOptions200ResponseResultsInner
     */
    bidExchange?: number;
    /**
     * The bid price.
     * @type {number}
     * @memberof QuotesOptions200ResponseResultsInner
     */
    bidPrice?: number;
    /**
     * The bid size. This represents the number of round lot orders at the given bid price. The normal round lot size is 100 shares. A bid size of 2 means there are 200 shares for purchase at the given bid price.
     * @type {number}
     * @memberof QuotesOptions200ResponseResultsInner
     */
    bidSize?: number;
    /**
     * The sequence number represents the sequence in which quote events happened.
     * These are increasing and unique per ticker symbol, but will not always be
     * sequential (e.g., 1, 2, 6, 9, 10, 11).
     * @type {number}
     * @memberof QuotesOptions200ResponseResultsInner
     */
    sequenceNumber: number;
    /**
     * The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this quote from the exchange which produced it.
     * @type {number}
     * @memberof QuotesOptions200ResponseResultsInner
     */
    sipTimestamp: number;
}

/**
 * Check if a given object implements the QuotesOptions200ResponseResultsInner interface.
 */
export function instanceOfQuotesOptions200ResponseResultsInner(value: object): value is QuotesOptions200ResponseResultsInner {
    if (!('sequenceNumber' in value) || value['sequenceNumber'] === undefined) return false;
    if (!('sipTimestamp' in value) || value['sipTimestamp'] === undefined) return false;
    return true;
}

export function QuotesOptions200ResponseResultsInnerFromJSON(json: any): QuotesOptions200ResponseResultsInner {
    return QuotesOptions200ResponseResultsInnerFromJSONTyped(json, false);
}

export function QuotesOptions200ResponseResultsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuotesOptions200ResponseResultsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'askExchange': json['ask_exchange'] == null ? undefined : json['ask_exchange'],
        'askPrice': json['ask_price'] == null ? undefined : json['ask_price'],
        'askSize': json['ask_size'] == null ? undefined : json['ask_size'],
        'bidExchange': json['bid_exchange'] == null ? undefined : json['bid_exchange'],
        'bidPrice': json['bid_price'] == null ? undefined : json['bid_price'],
        'bidSize': json['bid_size'] == null ? undefined : json['bid_size'],
        'sequenceNumber': json['sequence_number'],
        'sipTimestamp': json['sip_timestamp'],
    };
}

export function QuotesOptions200ResponseResultsInnerToJSON(json: any): QuotesOptions200ResponseResultsInner {
    return QuotesOptions200ResponseResultsInnerToJSONTyped(json, false);
}

export function QuotesOptions200ResponseResultsInnerToJSONTyped(value?: QuotesOptions200ResponseResultsInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'ask_exchange': value['askExchange'],
        'ask_price': value['askPrice'],
        'ask_size': value['askSize'],
        'bid_exchange': value['bidExchange'],
        'bid_price': value['bidPrice'],
        'bid_size': value['bidSize'],
        'sequence_number': value['sequenceNumber'],
        'sip_timestamp': value['sipTimestamp'],
    };
}

