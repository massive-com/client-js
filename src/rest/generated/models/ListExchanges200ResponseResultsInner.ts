/* tslint:disable */
/* eslint-disable */
/**
 * Polygon API
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * An entity that reports trades.
 * @export
 * @interface ListExchanges200ResponseResultsInner
 */
export interface ListExchanges200ResponseResultsInner {
    /**
     * A commonly used abbreviation for this exchange.
     * @type {string}
     * @memberof ListExchanges200ResponseResultsInner
     */
    acronym?: string;
    /**
     * An identifier for a group of similar financial instruments.
     * @type {string}
     * @memberof ListExchanges200ResponseResultsInner
     */
    assetClass: ListExchanges200ResponseResultsInnerAssetClassEnum;
    /**
     * A unique identifier used by Polygon.io for this exchange.
     * @type {number}
     * @memberof ListExchanges200ResponseResultsInner
     */
    id: number;
    /**
     * An identifier for a geographical location.
     * @type {string}
     * @memberof ListExchanges200ResponseResultsInner
     */
    locale: ListExchanges200ResponseResultsInnerLocaleEnum;
    /**
     * The Market Identifier Code of this exchange (see ISO 10383).
     * @type {string}
     * @memberof ListExchanges200ResponseResultsInner
     */
    mic?: string;
    /**
     * Name of this exchange.
     * @type {string}
     * @memberof ListExchanges200ResponseResultsInner
     */
    name: string;
    /**
     * The MIC of the entity that operates this exchange.
     * @type {string}
     * @memberof ListExchanges200ResponseResultsInner
     */
    operatingMic?: string;
    /**
     * The ID used by SIP's to represent this exchange.
     * @type {string}
     * @memberof ListExchanges200ResponseResultsInner
     */
    participantId?: string;
    /**
     * Represents the type of exchange.
     * @type {string}
     * @memberof ListExchanges200ResponseResultsInner
     */
    type: ListExchanges200ResponseResultsInnerTypeEnum;
    /**
     * A link to this exchange's website, if one exists.
     * @type {string}
     * @memberof ListExchanges200ResponseResultsInner
     */
    url?: string;
}


/**
 * @export
 */
export const ListExchanges200ResponseResultsInnerAssetClassEnum = {
    Stocks: 'stocks',
    Options: 'options',
    Crypto: 'crypto',
    Fx: 'fx'
} as const;
export type ListExchanges200ResponseResultsInnerAssetClassEnum = typeof ListExchanges200ResponseResultsInnerAssetClassEnum[keyof typeof ListExchanges200ResponseResultsInnerAssetClassEnum];

/**
 * @export
 */
export const ListExchanges200ResponseResultsInnerLocaleEnum = {
    Us: 'us',
    Global: 'global'
} as const;
export type ListExchanges200ResponseResultsInnerLocaleEnum = typeof ListExchanges200ResponseResultsInnerLocaleEnum[keyof typeof ListExchanges200ResponseResultsInnerLocaleEnum];

/**
 * @export
 */
export const ListExchanges200ResponseResultsInnerTypeEnum = {
    Exchange: 'exchange',
    Trf: 'TRF',
    Sip: 'SIP'
} as const;
export type ListExchanges200ResponseResultsInnerTypeEnum = typeof ListExchanges200ResponseResultsInnerTypeEnum[keyof typeof ListExchanges200ResponseResultsInnerTypeEnum];


/**
 * Check if a given object implements the ListExchanges200ResponseResultsInner interface.
 */
export function instanceOfListExchanges200ResponseResultsInner(value: object): value is ListExchanges200ResponseResultsInner {
    if (!('assetClass' in value) || value['assetClass'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('locale' in value) || value['locale'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function ListExchanges200ResponseResultsInnerFromJSON(json: any): ListExchanges200ResponseResultsInner {
    return ListExchanges200ResponseResultsInnerFromJSONTyped(json, false);
}

export function ListExchanges200ResponseResultsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListExchanges200ResponseResultsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'acronym': json['acronym'] == null ? undefined : json['acronym'],
        'assetClass': json['asset_class'],
        'id': json['id'],
        'locale': json['locale'],
        'mic': json['mic'] == null ? undefined : json['mic'],
        'name': json['name'],
        'operatingMic': json['operating_mic'] == null ? undefined : json['operating_mic'],
        'participantId': json['participant_id'] == null ? undefined : json['participant_id'],
        'type': json['type'],
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function ListExchanges200ResponseResultsInnerToJSON(json: any): ListExchanges200ResponseResultsInner {
    return ListExchanges200ResponseResultsInnerToJSONTyped(json, false);
}

export function ListExchanges200ResponseResultsInnerToJSONTyped(value?: ListExchanges200ResponseResultsInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'acronym': value['acronym'],
        'asset_class': value['assetClass'],
        'id': value['id'],
        'locale': value['locale'],
        'mic': value['mic'],
        'name': value['name'],
        'operating_mic': value['operatingMic'],
        'participant_id': value['participantId'],
        'type': value['type'],
        'url': value['url'],
    };
}

