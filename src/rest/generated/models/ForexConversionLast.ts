/* tslint:disable */
/* eslint-disable */
/**
 * Polygon API
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ForexConversionLast
 */
export interface ForexConversionLast {
    /**
     * The ask price.
     * @type {number}
     * @memberof ForexConversionLast
     */
    ask: number;
    /**
     * The bid price.
     * @type {number}
     * @memberof ForexConversionLast
     */
    bid: number;
    /**
     * The exchange ID. See <a href="https://polygon.io/docs/forex/get_v3_reference_exchanges" alt="Exchanges">Exchanges</a> for Polygon.io's mapping of exchange IDs.
     * @type {number}
     * @memberof ForexConversionLast
     */
    exchange: number;
    /**
     * The Unix Msec timestamp for the start of the aggregate window.
     * @type {number}
     * @memberof ForexConversionLast
     */
    timestamp: number;
}

/**
 * Check if a given object implements the ForexConversionLast interface.
 */
export function instanceOfForexConversionLast(value: object): value is ForexConversionLast {
    if (!('ask' in value) || value['ask'] === undefined) return false;
    if (!('bid' in value) || value['bid'] === undefined) return false;
    if (!('exchange' in value) || value['exchange'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    return true;
}

export function ForexConversionLastFromJSON(json: any): ForexConversionLast {
    return ForexConversionLastFromJSONTyped(json, false);
}

export function ForexConversionLastFromJSONTyped(json: any, ignoreDiscriminator: boolean): ForexConversionLast {
    if (json == null) {
        return json;
    }
    return {
        
        'ask': json['ask'],
        'bid': json['bid'],
        'exchange': json['exchange'],
        'timestamp': json['timestamp'],
    };
}

export function ForexConversionLastToJSON(json: any): ForexConversionLast {
    return ForexConversionLastToJSONTyped(json, false);
}

export function ForexConversionLastToJSONTyped(value?: ForexConversionLast | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'ask': value['ask'],
        'bid': value['bid'],
        'exchange': value['exchange'],
        'timestamp': value['timestamp'],
    };
}

