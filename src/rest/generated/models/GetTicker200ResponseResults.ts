/* tslint:disable */
/* eslint-disable */
/**
 * Polygon API
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GetTicker200ResponseResultsAddress } from './GetTicker200ResponseResultsAddress';
import {
    GetTicker200ResponseResultsAddressFromJSON,
    GetTicker200ResponseResultsAddressFromJSONTyped,
    GetTicker200ResponseResultsAddressToJSON,
    GetTicker200ResponseResultsAddressToJSONTyped,
} from './GetTicker200ResponseResultsAddress';
import type { GetTicker200ResponseResultsBranding } from './GetTicker200ResponseResultsBranding';
import {
    GetTicker200ResponseResultsBrandingFromJSON,
    GetTicker200ResponseResultsBrandingFromJSONTyped,
    GetTicker200ResponseResultsBrandingToJSON,
    GetTicker200ResponseResultsBrandingToJSONTyped,
} from './GetTicker200ResponseResultsBranding';

/**
 * Ticker with details.
 * @export
 * @interface GetTicker200ResponseResults
 */
export interface GetTicker200ResponseResults {
    /**
     * Whether or not the asset is actively traded. False means the asset has been delisted.
     * @type {boolean}
     * @memberof GetTicker200ResponseResults
     */
    active: boolean;
    /**
     * 
     * @type {GetTicker200ResponseResultsAddress}
     * @memberof GetTicker200ResponseResults
     */
    address?: GetTicker200ResponseResultsAddress;
    /**
     * 
     * @type {GetTicker200ResponseResultsBranding}
     * @memberof GetTicker200ResponseResults
     */
    branding?: GetTicker200ResponseResultsBranding;
    /**
     * The CIK number for this ticker. Find more information [here](https://en.wikipedia.org/wiki/Central_Index_Key).
     * @type {string}
     * @memberof GetTicker200ResponseResults
     */
    cik?: string;
    /**
     * The composite OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/about/figi)
     * @type {string}
     * @memberof GetTicker200ResponseResults
     */
    compositeFigi?: string;
    /**
     * The name of the currency that this asset is traded with.
     * @type {string}
     * @memberof GetTicker200ResponseResults
     */
    currencyName: string;
    /**
     * The last date that the asset was traded.
     * @type {Date}
     * @memberof GetTicker200ResponseResults
     */
    delistedUtc?: Date;
    /**
     * A description of the company and what they do/offer.
     * @type {string}
     * @memberof GetTicker200ResponseResults
     */
    description?: string;
    /**
     * The URL of the company's website homepage.
     * @type {string}
     * @memberof GetTicker200ResponseResults
     */
    homepageUrl?: string;
    /**
     * The date that the symbol was first publicly listed in the format YYYY-MM-DD.
     * @type {string}
     * @memberof GetTicker200ResponseResults
     */
    listDate?: string;
    /**
     * The locale of the asset.
     * @type {string}
     * @memberof GetTicker200ResponseResults
     */
    locale: GetTicker200ResponseResultsLocaleEnum;
    /**
     * The market type of the asset.
     * @type {string}
     * @memberof GetTicker200ResponseResults
     */
    market: GetTicker200ResponseResultsMarketEnum;
    /**
     * The most recent close price of the ticker multiplied by weighted outstanding shares.
     * @type {number}
     * @memberof GetTicker200ResponseResults
     */
    marketCap?: number;
    /**
     * The name of the asset. For stocks/equities this will be the companies registered name. For crypto/fx this will be the name of the currency or coin pair.
     * @type {string}
     * @memberof GetTicker200ResponseResults
     */
    name: string;
    /**
     * The phone number for the company behind this ticker.
     * @type {string}
     * @memberof GetTicker200ResponseResults
     */
    phoneNumber?: string;
    /**
     * The ISO code of the primary listing exchange for this asset.
     * @type {string}
     * @memberof GetTicker200ResponseResults
     */
    primaryExchange?: string;
    /**
     * Round lot size of this security.
     * @type {number}
     * @memberof GetTicker200ResponseResults
     */
    roundLot?: number;
    /**
     * The share Class OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/about/figi)
     * @type {string}
     * @memberof GetTicker200ResponseResults
     */
    shareClassFigi?: string;
    /**
     * The recorded number of outstanding shares for this particular share class.
     * @type {number}
     * @memberof GetTicker200ResponseResults
     */
    shareClassSharesOutstanding?: number;
    /**
     * The standard industrial classification code for this ticker.  For a list of SIC Codes, see the SEC's <a rel="nofollow" target="_blank" href="https://www.sec.gov/info/edgar/siccodes.htm">SIC Code List</a>.
     * @type {string}
     * @memberof GetTicker200ResponseResults
     */
    sicCode?: string;
    /**
     * A description of this ticker's SIC code.
     * @type {string}
     * @memberof GetTicker200ResponseResults
     */
    sicDescription?: string;
    /**
     * The exchange symbol that this item is traded under.
     * @type {string}
     * @memberof GetTicker200ResponseResults
     */
    ticker: string;
    /**
     * The root of a specified ticker. For example, the root of BRK.A is BRK.
     * @type {string}
     * @memberof GetTicker200ResponseResults
     */
    tickerRoot?: string;
    /**
     * The suffix of a specified ticker. For example, the suffix of BRK.A is A.
     * @type {string}
     * @memberof GetTicker200ResponseResults
     */
    tickerSuffix?: string;
    /**
     * The approximate number of employees for the company.
     * @type {number}
     * @memberof GetTicker200ResponseResults
     */
    totalEmployees?: number;
    /**
     * The type of the asset. Find the types that we support via our [Ticker Types API](https://polygon.io/docs/stocks/get_v3_reference_tickers_types).
     * @type {string}
     * @memberof GetTicker200ResponseResults
     */
    type?: string;
    /**
     * The shares outstanding calculated assuming all shares of other share classes are converted to this share class.
     * @type {number}
     * @memberof GetTicker200ResponseResults
     */
    weightedSharesOutstanding?: number;
}


/**
 * @export
 */
export const GetTicker200ResponseResultsLocaleEnum = {
    Us: 'us',
    Global: 'global'
} as const;
export type GetTicker200ResponseResultsLocaleEnum = typeof GetTicker200ResponseResultsLocaleEnum[keyof typeof GetTicker200ResponseResultsLocaleEnum];

/**
 * @export
 */
export const GetTicker200ResponseResultsMarketEnum = {
    Stocks: 'stocks',
    Crypto: 'crypto',
    Fx: 'fx',
    Otc: 'otc',
    Indices: 'indices'
} as const;
export type GetTicker200ResponseResultsMarketEnum = typeof GetTicker200ResponseResultsMarketEnum[keyof typeof GetTicker200ResponseResultsMarketEnum];


/**
 * Check if a given object implements the GetTicker200ResponseResults interface.
 */
export function instanceOfGetTicker200ResponseResults(value: object): value is GetTicker200ResponseResults {
    if (!('active' in value) || value['active'] === undefined) return false;
    if (!('currencyName' in value) || value['currencyName'] === undefined) return false;
    if (!('locale' in value) || value['locale'] === undefined) return false;
    if (!('market' in value) || value['market'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('ticker' in value) || value['ticker'] === undefined) return false;
    return true;
}

export function GetTicker200ResponseResultsFromJSON(json: any): GetTicker200ResponseResults {
    return GetTicker200ResponseResultsFromJSONTyped(json, false);
}

export function GetTicker200ResponseResultsFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetTicker200ResponseResults {
    if (json == null) {
        return json;
    }
    return {
        
        'active': json['active'],
        'address': json['address'] == null ? undefined : GetTicker200ResponseResultsAddressFromJSON(json['address']),
        'branding': json['branding'] == null ? undefined : GetTicker200ResponseResultsBrandingFromJSON(json['branding']),
        'cik': json['cik'] == null ? undefined : json['cik'],
        'compositeFigi': json['composite_figi'] == null ? undefined : json['composite_figi'],
        'currencyName': json['currency_name'],
        'delistedUtc': json['delisted_utc'] == null ? undefined : (new Date(json['delisted_utc'])),
        'description': json['description'] == null ? undefined : json['description'],
        'homepageUrl': json['homepage_url'] == null ? undefined : json['homepage_url'],
        'listDate': json['list_date'] == null ? undefined : json['list_date'],
        'locale': json['locale'],
        'market': json['market'],
        'marketCap': json['market_cap'] == null ? undefined : json['market_cap'],
        'name': json['name'],
        'phoneNumber': json['phone_number'] == null ? undefined : json['phone_number'],
        'primaryExchange': json['primary_exchange'] == null ? undefined : json['primary_exchange'],
        'roundLot': json['round_lot'] == null ? undefined : json['round_lot'],
        'shareClassFigi': json['share_class_figi'] == null ? undefined : json['share_class_figi'],
        'shareClassSharesOutstanding': json['share_class_shares_outstanding'] == null ? undefined : json['share_class_shares_outstanding'],
        'sicCode': json['sic_code'] == null ? undefined : json['sic_code'],
        'sicDescription': json['sic_description'] == null ? undefined : json['sic_description'],
        'ticker': json['ticker'],
        'tickerRoot': json['ticker_root'] == null ? undefined : json['ticker_root'],
        'tickerSuffix': json['ticker_suffix'] == null ? undefined : json['ticker_suffix'],
        'totalEmployees': json['total_employees'] == null ? undefined : json['total_employees'],
        'type': json['type'] == null ? undefined : json['type'],
        'weightedSharesOutstanding': json['weighted_shares_outstanding'] == null ? undefined : json['weighted_shares_outstanding'],
    };
}

export function GetTicker200ResponseResultsToJSON(json: any): GetTicker200ResponseResults {
    return GetTicker200ResponseResultsToJSONTyped(json, false);
}

export function GetTicker200ResponseResultsToJSONTyped(value?: GetTicker200ResponseResults | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'active': value['active'],
        'address': GetTicker200ResponseResultsAddressToJSON(value['address']),
        'branding': GetTicker200ResponseResultsBrandingToJSON(value['branding']),
        'cik': value['cik'],
        'composite_figi': value['compositeFigi'],
        'currency_name': value['currencyName'],
        'delisted_utc': value['delistedUtc'] == null ? undefined : ((value['delistedUtc']).toISOString()),
        'description': value['description'],
        'homepage_url': value['homepageUrl'],
        'list_date': value['listDate'],
        'locale': value['locale'],
        'market': value['market'],
        'market_cap': value['marketCap'],
        'name': value['name'],
        'phone_number': value['phoneNumber'],
        'primary_exchange': value['primaryExchange'],
        'round_lot': value['roundLot'],
        'share_class_figi': value['shareClassFigi'],
        'share_class_shares_outstanding': value['shareClassSharesOutstanding'],
        'sic_code': value['sicCode'],
        'sic_description': value['sicDescription'],
        'ticker': value['ticker'],
        'ticker_root': value['tickerRoot'],
        'ticker_suffix': value['tickerSuffix'],
        'total_employees': value['totalEmployees'],
        'type': value['type'],
        'weighted_shares_outstanding': value['weightedSharesOutstanding'],
    };
}

