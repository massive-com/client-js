/* tslint:disable */
/* eslint-disable */
/**
 * Polygon API
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Financial
 */
export interface Financial {
    /**
     * 
     * @type {number}
     * @memberof Financial
     */
    cashChange?: number;
    /**
     * 
     * @type {number}
     * @memberof Financial
     */
    cashFlow?: number;
    /**
     * 
     * @type {number}
     * @memberof Financial
     */
    costOfRevenue?: number;
    /**
     * 
     * @type {number}
     * @memberof Financial
     */
    currentAssets?: number;
    /**
     * 
     * @type {number}
     * @memberof Financial
     */
    currentCash?: number;
    /**
     * 
     * @type {number}
     * @memberof Financial
     */
    currentDebt?: number;
    /**
     * 
     * @type {number}
     * @memberof Financial
     */
    grossProfit?: number;
    /**
     * 
     * @type {number}
     * @memberof Financial
     */
    netIncome?: number;
    /**
     * 
     * @type {number}
     * @memberof Financial
     */
    operatingExpense?: number;
    /**
     * 
     * @type {number}
     * @memberof Financial
     */
    operatingGainsLosses?: number;
    /**
     * 
     * @type {number}
     * @memberof Financial
     */
    operatingIncome?: number;
    /**
     * 
     * @type {number}
     * @memberof Financial
     */
    operatingRevenue?: number;
    /**
     * Report Date
     * @type {Date}
     * @memberof Financial
     */
    reportDate: Date;
    /**
     * Report date as non date format
     * @type {string}
     * @memberof Financial
     */
    reportDateStr: string;
    /**
     * 
     * @type {number}
     * @memberof Financial
     */
    researchAndDevelopment?: number;
    /**
     * 
     * @type {number}
     * @memberof Financial
     */
    shareholderEquity?: number;
    /**
     * Stock Symbol
     * @type {string}
     * @memberof Financial
     */
    symbol: string;
    /**
     * 
     * @type {number}
     * @memberof Financial
     */
    totalAssets?: number;
    /**
     * 
     * @type {number}
     * @memberof Financial
     */
    totalCash?: number;
    /**
     * 
     * @type {number}
     * @memberof Financial
     */
    totalDebt?: number;
    /**
     * 
     * @type {number}
     * @memberof Financial
     */
    totalLiabilities?: number;
    /**
     * 
     * @type {number}
     * @memberof Financial
     */
    totalRevenue?: number;
}

/**
 * Check if a given object implements the Financial interface.
 */
export function instanceOfFinancial(value: object): value is Financial {
    if (!('reportDate' in value) || value['reportDate'] === undefined) return false;
    if (!('reportDateStr' in value) || value['reportDateStr'] === undefined) return false;
    if (!('symbol' in value) || value['symbol'] === undefined) return false;
    return true;
}

export function FinancialFromJSON(json: any): Financial {
    return FinancialFromJSONTyped(json, false);
}

export function FinancialFromJSONTyped(json: any, ignoreDiscriminator: boolean): Financial {
    if (json == null) {
        return json;
    }
    return {
        
        'cashChange': json['cashChange'] == null ? undefined : json['cashChange'],
        'cashFlow': json['cashFlow'] == null ? undefined : json['cashFlow'],
        'costOfRevenue': json['costOfRevenue'] == null ? undefined : json['costOfRevenue'],
        'currentAssets': json['currentAssets'] == null ? undefined : json['currentAssets'],
        'currentCash': json['currentCash'] == null ? undefined : json['currentCash'],
        'currentDebt': json['currentDebt'] == null ? undefined : json['currentDebt'],
        'grossProfit': json['grossProfit'] == null ? undefined : json['grossProfit'],
        'netIncome': json['netIncome'] == null ? undefined : json['netIncome'],
        'operatingExpense': json['operatingExpense'] == null ? undefined : json['operatingExpense'],
        'operatingGainsLosses': json['operatingGainsLosses'] == null ? undefined : json['operatingGainsLosses'],
        'operatingIncome': json['operatingIncome'] == null ? undefined : json['operatingIncome'],
        'operatingRevenue': json['operatingRevenue'] == null ? undefined : json['operatingRevenue'],
        'reportDate': (new Date(json['reportDate'])),
        'reportDateStr': json['reportDateStr'],
        'researchAndDevelopment': json['researchAndDevelopment'] == null ? undefined : json['researchAndDevelopment'],
        'shareholderEquity': json['shareholderEquity'] == null ? undefined : json['shareholderEquity'],
        'symbol': json['symbol'],
        'totalAssets': json['totalAssets'] == null ? undefined : json['totalAssets'],
        'totalCash': json['totalCash'] == null ? undefined : json['totalCash'],
        'totalDebt': json['totalDebt'] == null ? undefined : json['totalDebt'],
        'totalLiabilities': json['totalLiabilities'] == null ? undefined : json['totalLiabilities'],
        'totalRevenue': json['totalRevenue'] == null ? undefined : json['totalRevenue'],
    };
}

export function FinancialToJSON(json: any): Financial {
    return FinancialToJSONTyped(json, false);
}

export function FinancialToJSONTyped(value?: Financial | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'cashChange': value['cashChange'],
        'cashFlow': value['cashFlow'],
        'costOfRevenue': value['costOfRevenue'],
        'currentAssets': value['currentAssets'],
        'currentCash': value['currentCash'],
        'currentDebt': value['currentDebt'],
        'grossProfit': value['grossProfit'],
        'netIncome': value['netIncome'],
        'operatingExpense': value['operatingExpense'],
        'operatingGainsLosses': value['operatingGainsLosses'],
        'operatingIncome': value['operatingIncome'],
        'operatingRevenue': value['operatingRevenue'],
        'reportDate': ((value['reportDate']).toISOString()),
        'reportDateStr': value['reportDateStr'],
        'researchAndDevelopment': value['researchAndDevelopment'],
        'shareholderEquity': value['shareholderEquity'],
        'symbol': value['symbol'],
        'totalAssets': value['totalAssets'],
        'totalCash': value['totalCash'],
        'totalDebt': value['totalDebt'],
        'totalLiabilities': value['totalLiabilities'],
        'totalRevenue': value['totalRevenue'],
    };
}

