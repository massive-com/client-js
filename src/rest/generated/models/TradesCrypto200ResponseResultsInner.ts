/* tslint:disable */
/* eslint-disable */
/**
 * Polygon API
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TradesCrypto200ResponseResultsInner
 */
export interface TradesCrypto200ResponseResultsInner {
    /**
     * A list of condition codes.
     * @type {Array<number>}
     * @memberof TradesCrypto200ResponseResultsInner
     */
    conditions?: Array<number>;
    /**
     * The exchange ID. See <a href="https://polygon.io/docs/crypto/get_v3_reference_exchanges" alt="Exchanges">Exchanges</a> for Polygon.io's mapping of exchange IDs.
     * @type {number}
     * @memberof TradesCrypto200ResponseResultsInner
     */
    exchange: number;
    /**
     * The Trade ID which uniquely identifies a trade on the exchange that the trade happened on.
     * @type {string}
     * @memberof TradesCrypto200ResponseResultsInner
     */
    id: string;
    /**
     * The nanosecond Exchange Unix Timestamp. This is the timestamp of when the trade was generated at the exchange.
     * @type {number}
     * @memberof TradesCrypto200ResponseResultsInner
     */
    participantTimestamp?: number;
    /**
     * The price of the trade in the base currency of the crypto pair.
     * @type {number}
     * @memberof TradesCrypto200ResponseResultsInner
     */
    price: number;
    /**
     * The size of a trade (also known as volume).
     * @type {number}
     * @memberof TradesCrypto200ResponseResultsInner
     */
    size: number;
}

/**
 * Check if a given object implements the TradesCrypto200ResponseResultsInner interface.
 */
export function instanceOfTradesCrypto200ResponseResultsInner(value: object): value is TradesCrypto200ResponseResultsInner {
    if (!('exchange' in value) || value['exchange'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('price' in value) || value['price'] === undefined) return false;
    if (!('size' in value) || value['size'] === undefined) return false;
    return true;
}

export function TradesCrypto200ResponseResultsInnerFromJSON(json: any): TradesCrypto200ResponseResultsInner {
    return TradesCrypto200ResponseResultsInnerFromJSONTyped(json, false);
}

export function TradesCrypto200ResponseResultsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): TradesCrypto200ResponseResultsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'conditions': json['conditions'] == null ? undefined : json['conditions'],
        'exchange': json['exchange'],
        'id': json['id'],
        'participantTimestamp': json['participant_timestamp'] == null ? undefined : json['participant_timestamp'],
        'price': json['price'],
        'size': json['size'],
    };
}

export function TradesCrypto200ResponseResultsInnerToJSON(json: any): TradesCrypto200ResponseResultsInner {
    return TradesCrypto200ResponseResultsInnerToJSONTyped(json, false);
}

export function TradesCrypto200ResponseResultsInnerToJSONTyped(value?: TradesCrypto200ResponseResultsInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'conditions': value['conditions'],
        'exchange': value['exchange'],
        'id': value['id'],
        'participant_timestamp': value['participantTimestamp'],
        'price': value['price'],
        'size': value['size'],
    };
}

