/* tslint:disable */
/* eslint-disable */
/**
 * Polygon API
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetTicker200ResponseResultsBranding
 */
export interface GetTicker200ResponseResultsBranding {
    /**
     * A link to this ticker's company's icon. Icon's are generally smaller, square images that represent the company at a glance.
     * Note that you must provide an API key when accessing this URL. See the "Authentication" section at the top of this page for more details.
     * @type {string}
     * @memberof GetTicker200ResponseResultsBranding
     */
    iconUrl?: string;
    /**
     * A link to this ticker's company's logo.
     * Note that you must provide an API key when accessing this URL. See the "Authentication" section at the top of this page for more details.
     * @type {string}
     * @memberof GetTicker200ResponseResultsBranding
     */
    logoUrl?: string;
}

/**
 * Check if a given object implements the GetTicker200ResponseResultsBranding interface.
 */
export function instanceOfGetTicker200ResponseResultsBranding(value: object): value is GetTicker200ResponseResultsBranding {
    return true;
}

export function GetTicker200ResponseResultsBrandingFromJSON(json: any): GetTicker200ResponseResultsBranding {
    return GetTicker200ResponseResultsBrandingFromJSONTyped(json, false);
}

export function GetTicker200ResponseResultsBrandingFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetTicker200ResponseResultsBranding {
    if (json == null) {
        return json;
    }
    return {
        
        'iconUrl': json['icon_url'] == null ? undefined : json['icon_url'],
        'logoUrl': json['logo_url'] == null ? undefined : json['logo_url'],
    };
}

export function GetTicker200ResponseResultsBrandingToJSON(json: any): GetTicker200ResponseResultsBranding {
    return GetTicker200ResponseResultsBrandingToJSONTyped(json, false);
}

export function GetTicker200ResponseResultsBrandingToJSONTyped(value?: GetTicker200ResponseResultsBranding | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'icon_url': value['iconUrl'],
        'logo_url': value['logoUrl'],
    };
}

