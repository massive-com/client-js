/* tslint:disable */
/* eslint-disable */
/**
 * Polygon API
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ListConditions200ResponseResultsInnerUpdateRules } from './ListConditions200ResponseResultsInnerUpdateRules';
import {
    ListConditions200ResponseResultsInnerUpdateRulesFromJSON,
    ListConditions200ResponseResultsInnerUpdateRulesFromJSONTyped,
    ListConditions200ResponseResultsInnerUpdateRulesToJSON,
    ListConditions200ResponseResultsInnerUpdateRulesToJSONTyped,
} from './ListConditions200ResponseResultsInnerUpdateRules';
import type { ListConditions200ResponseResultsInnerSipMapping } from './ListConditions200ResponseResultsInnerSipMapping';
import {
    ListConditions200ResponseResultsInnerSipMappingFromJSON,
    ListConditions200ResponseResultsInnerSipMappingFromJSONTyped,
    ListConditions200ResponseResultsInnerSipMappingToJSON,
    ListConditions200ResponseResultsInnerSipMappingToJSONTyped,
} from './ListConditions200ResponseResultsInnerSipMapping';

/**
 * A condition generally refers to any extra information passed in a trade or a quote. These conditions
 * may or may not affect the behavior of aggregates.
 * @export
 * @interface ListConditions200ResponseResultsInner
 */
export interface ListConditions200ResponseResultsInner {
    /**
     * A commonly-used abbreviation for this condition.
     * @type {string}
     * @memberof ListConditions200ResponseResultsInner
     */
    abbreviation?: string;
    /**
     * An identifier for a group of similar financial instruments.
     * @type {string}
     * @memberof ListConditions200ResponseResultsInner
     */
    assetClass: ListConditions200ResponseResultsInnerAssetClassEnum;
    /**
     * Data types that this condition applies to.
     * @type {Array<string>}
     * @memberof ListConditions200ResponseResultsInner
     */
    dataTypes: Array<ListConditions200ResponseResultsInnerDataTypesEnum>;
    /**
     * A short description of the semantics of this condition.
     * @type {string}
     * @memberof ListConditions200ResponseResultsInner
     */
    description?: string;
    /**
     * If present, mapping this condition from a Polygon.io code to a SIP symbol depends on this attribute.
     * In other words, data with this condition attached comes exclusively from the given exchange.
     * @type {number}
     * @memberof ListConditions200ResponseResultsInner
     */
    exchange?: number;
    /**
     * An identifier used by Polygon.io for this condition. Unique per data type.
     * @type {number}
     * @memberof ListConditions200ResponseResultsInner
     */
    id: number;
    /**
     * If true, this condition is from an old version of the SIPs' specs and no longer is used.
     * Other conditions may or may not reuse the same symbol as this one.
     * @type {boolean}
     * @memberof ListConditions200ResponseResultsInner
     */
    legacy?: boolean;
    /**
     * The name of this condition.
     * @type {string}
     * @memberof ListConditions200ResponseResultsInner
     */
    name: string;
    /**
     * 
     * @type {ListConditions200ResponseResultsInnerSipMapping}
     * @memberof ListConditions200ResponseResultsInner
     */
    sipMapping: ListConditions200ResponseResultsInnerSipMapping;
    /**
     * An identifier for a collection of related conditions.
     * @type {string}
     * @memberof ListConditions200ResponseResultsInner
     */
    type: ListConditions200ResponseResultsInnerTypeEnum;
    /**
     * 
     * @type {ListConditions200ResponseResultsInnerUpdateRules}
     * @memberof ListConditions200ResponseResultsInner
     */
    updateRules?: ListConditions200ResponseResultsInnerUpdateRules;
}


/**
 * @export
 */
export const ListConditions200ResponseResultsInnerAssetClassEnum = {
    Stocks: 'stocks',
    Options: 'options',
    Crypto: 'crypto',
    Fx: 'fx'
} as const;
export type ListConditions200ResponseResultsInnerAssetClassEnum = typeof ListConditions200ResponseResultsInnerAssetClassEnum[keyof typeof ListConditions200ResponseResultsInnerAssetClassEnum];

/**
 * @export
 */
export const ListConditions200ResponseResultsInnerDataTypesEnum = {
    Trade: 'trade',
    Bbo: 'bbo',
    Nbbo: 'nbbo'
} as const;
export type ListConditions200ResponseResultsInnerDataTypesEnum = typeof ListConditions200ResponseResultsInnerDataTypesEnum[keyof typeof ListConditions200ResponseResultsInnerDataTypesEnum];

/**
 * @export
 */
export const ListConditions200ResponseResultsInnerTypeEnum = {
    SaleCondition: 'sale_condition',
    QuoteCondition: 'quote_condition',
    SipGeneratedFlag: 'sip_generated_flag',
    FinancialStatusIndicator: 'financial_status_indicator',
    ShortSaleRestrictionIndicator: 'short_sale_restriction_indicator',
    SettlementCondition: 'settlement_condition',
    MarketCondition: 'market_condition',
    TradeThruExempt: 'trade_thru_exempt'
} as const;
export type ListConditions200ResponseResultsInnerTypeEnum = typeof ListConditions200ResponseResultsInnerTypeEnum[keyof typeof ListConditions200ResponseResultsInnerTypeEnum];


/**
 * Check if a given object implements the ListConditions200ResponseResultsInner interface.
 */
export function instanceOfListConditions200ResponseResultsInner(value: object): value is ListConditions200ResponseResultsInner {
    if (!('assetClass' in value) || value['assetClass'] === undefined) return false;
    if (!('dataTypes' in value) || value['dataTypes'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('sipMapping' in value) || value['sipMapping'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function ListConditions200ResponseResultsInnerFromJSON(json: any): ListConditions200ResponseResultsInner {
    return ListConditions200ResponseResultsInnerFromJSONTyped(json, false);
}

export function ListConditions200ResponseResultsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListConditions200ResponseResultsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'abbreviation': json['abbreviation'] == null ? undefined : json['abbreviation'],
        'assetClass': json['asset_class'],
        'dataTypes': json['data_types'],
        'description': json['description'] == null ? undefined : json['description'],
        'exchange': json['exchange'] == null ? undefined : json['exchange'],
        'id': json['id'],
        'legacy': json['legacy'] == null ? undefined : json['legacy'],
        'name': json['name'],
        'sipMapping': ListConditions200ResponseResultsInnerSipMappingFromJSON(json['sip_mapping']),
        'type': json['type'],
        'updateRules': json['update_rules'] == null ? undefined : ListConditions200ResponseResultsInnerUpdateRulesFromJSON(json['update_rules']),
    };
}

export function ListConditions200ResponseResultsInnerToJSON(json: any): ListConditions200ResponseResultsInner {
    return ListConditions200ResponseResultsInnerToJSONTyped(json, false);
}

export function ListConditions200ResponseResultsInnerToJSONTyped(value?: ListConditions200ResponseResultsInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'abbreviation': value['abbreviation'],
        'asset_class': value['assetClass'],
        'data_types': value['dataTypes'],
        'description': value['description'],
        'exchange': value['exchange'],
        'id': value['id'],
        'legacy': value['legacy'],
        'name': value['name'],
        'sip_mapping': ListConditions200ResponseResultsInnerSipMappingToJSON(value['sipMapping']),
        'type': value['type'],
        'update_rules': ListConditions200ResponseResultsInnerUpdateRulesToJSON(value['updateRules']),
    };
}

