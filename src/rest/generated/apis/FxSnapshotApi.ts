import getWithGlobals from "../../transport/getWithGlobals";
/**
 * Polygon API
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  V2SnapshotLocaleGlobalMarketsForexTickersGet200Response,
  V2SnapshotLocaleGlobalMarketsForexTickersTickerGet200Response,
} from '../models/index';
import {
    V2SnapshotLocaleGlobalMarketsForexTickersGet200ResponseFromJSON,
    V2SnapshotLocaleGlobalMarketsForexTickersGet200ResponseToJSON,
    V2SnapshotLocaleGlobalMarketsForexTickersTickerGet200ResponseFromJSON,
    V2SnapshotLocaleGlobalMarketsForexTickersTickerGet200ResponseToJSON,
} from '../models/index';

export interface V2SnapshotLocaleGlobalMarketsForexDirectionGetRequest {
    direction: V2SnapshotLocaleGlobalMarketsForexDirectionGetDirectionEnum;
}

export interface V2SnapshotLocaleGlobalMarketsForexTickersGetRequest {
    tickers?: Array<string>;
}

export interface V2SnapshotLocaleGlobalMarketsForexTickersTickerGetRequest {
    ticker: string;
}

/**
 * 
 */
export class FxSnapshotApi extends runtime.BaseAPI {

    /**
     * Get the current top 20 gainers or losers of the day in forex markets. <br /> <br /> Top gainers are those tickers whose price has increased by the highest percentage since the previous day\'s close. Top losers are those tickers whose price has decreased by the highest percentage since the previous day\'s close. <br /> <br /> Note: Snapshot data is cleared at 12am EST and gets populated as data is received from the exchanges. 
     * Gainers/Losers
     */
    async v2SnapshotLocaleGlobalMarketsForexDirectionGetRaw(requestParameters: V2SnapshotLocaleGlobalMarketsForexDirectionGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<V2SnapshotLocaleGlobalMarketsForexTickersGet200Response>> {
        if (requestParameters['direction'] == null) {
            throw new runtime.RequiredError(
                'direction',
                'Required parameter "direction" was null or undefined when calling v2SnapshotLocaleGlobalMarketsForexDirectionGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["apiKey"] = await this.configuration.apiKey("apiKey"); // apiKey authentication
        }

        const response = await this.request({
            path: `/v2/snapshot/locale/global/markets/forex/{direction}`.replace(`{${"direction"}}`, encodeURIComponent(String(requestParameters['direction']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => V2SnapshotLocaleGlobalMarketsForexTickersGet200ResponseFromJSON(jsonValue));
    }

    /**
     * Get the current top 20 gainers or losers of the day in forex markets. <br /> <br /> Top gainers are those tickers whose price has increased by the highest percentage since the previous day\'s close. Top losers are those tickers whose price has decreased by the highest percentage since the previous day\'s close. <br /> <br /> Note: Snapshot data is cleared at 12am EST and gets populated as data is received from the exchanges. 
     * Gainers/Losers
     */
    async v2SnapshotLocaleGlobalMarketsForexDirectionGet(requestParameters: V2SnapshotLocaleGlobalMarketsForexDirectionGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<V2SnapshotLocaleGlobalMarketsForexTickersGet200Response> {
        const response = await this.v2SnapshotLocaleGlobalMarketsForexDirectionGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get the current minute, day, and previous day’s aggregate, as well as the last trade and quote for all traded forex symbols. <br /> <br /> Note: Snapshot data is cleared at 12am EST and gets populated as data is received from the exchanges. This can happen as early as 4am EST. 
     * All Tickers
     */
    async v2SnapshotLocaleGlobalMarketsForexTickersGetRaw(requestParameters: V2SnapshotLocaleGlobalMarketsForexTickersGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<V2SnapshotLocaleGlobalMarketsForexTickersGet200Response>> {
        const queryParameters: any = {};

        if (requestParameters['tickers'] != null) {
            queryParameters['tickers'] = requestParameters['tickers'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["apiKey"] = await this.configuration.apiKey("apiKey"); // apiKey authentication
        }

        const response = await this.request({
            path: `/v2/snapshot/locale/global/markets/forex/tickers`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => V2SnapshotLocaleGlobalMarketsForexTickersGet200ResponseFromJSON(jsonValue));
    }

    /**
     * Get the current minute, day, and previous day’s aggregate, as well as the last trade and quote for all traded forex symbols. <br /> <br /> Note: Snapshot data is cleared at 12am EST and gets populated as data is received from the exchanges. This can happen as early as 4am EST. 
     * All Tickers
     */
    async v2SnapshotLocaleGlobalMarketsForexTickersGet(requestParameters: V2SnapshotLocaleGlobalMarketsForexTickersGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<V2SnapshotLocaleGlobalMarketsForexTickersGet200Response> {
        const response = await this.v2SnapshotLocaleGlobalMarketsForexTickersGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get the current minute, day, and previous day’s aggregate, as well as the last trade and quote for a single traded currency symbol. <br /> <br /> Note: Snapshot data is cleared at 12am EST and gets populated as data is received from the exchanges. 
     * Ticker
     */
    async v2SnapshotLocaleGlobalMarketsForexTickersTickerGetRaw(requestParameters: V2SnapshotLocaleGlobalMarketsForexTickersTickerGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<V2SnapshotLocaleGlobalMarketsForexTickersTickerGet200Response>> {
        if (requestParameters['ticker'] == null) {
            throw new runtime.RequiredError(
                'ticker',
                'Required parameter "ticker" was null or undefined when calling v2SnapshotLocaleGlobalMarketsForexTickersTickerGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["apiKey"] = await this.configuration.apiKey("apiKey"); // apiKey authentication
        }

        const response = await this.request({
            path: `/v2/snapshot/locale/global/markets/forex/tickers/{ticker}`.replace(`{${"ticker"}}`, encodeURIComponent(String(requestParameters['ticker']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => V2SnapshotLocaleGlobalMarketsForexTickersTickerGet200ResponseFromJSON(jsonValue));
    }

    /**
     * Get the current minute, day, and previous day’s aggregate, as well as the last trade and quote for a single traded currency symbol. <br /> <br /> Note: Snapshot data is cleared at 12am EST and gets populated as data is received from the exchanges. 
     * Ticker
     */
    async v2SnapshotLocaleGlobalMarketsForexTickersTickerGet(requestParameters: V2SnapshotLocaleGlobalMarketsForexTickersTickerGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<V2SnapshotLocaleGlobalMarketsForexTickersTickerGet200Response> {
        const response = await this.v2SnapshotLocaleGlobalMarketsForexTickersTickerGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const V2SnapshotLocaleGlobalMarketsForexDirectionGetDirectionEnum = {
    Gainers: 'gainers',
    Losers: 'losers'
} as const;
export type V2SnapshotLocaleGlobalMarketsForexDirectionGetDirectionEnum = typeof V2SnapshotLocaleGlobalMarketsForexDirectionGetDirectionEnum[keyof typeof V2SnapshotLocaleGlobalMarketsForexDirectionGetDirectionEnum];
