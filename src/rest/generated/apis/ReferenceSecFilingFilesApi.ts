import getWithGlobals from "../../transport/getWithGlobals";
/**
 * Polygon API
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ListFilingFiles200Response,
} from '../models/index';
import {
    ListFilingFiles200ResponseFromJSON,
    ListFilingFiles200ResponseToJSON,
} from '../models/index';

export interface ListFilingFilesRequest {
    filingId?: string;
    sequence?: number;
    filename?: string;
    sequenceGte?: number;
    sequenceGt?: number;
    sequenceLte?: number;
    sequenceLt?: number;
    filenameGte?: string;
    filenameGt?: string;
    filenameLte?: string;
    filenameLt?: string;
    order?: ListFilingFilesOrderEnum;
    limit?: number;
    sort?: ListFilingFilesSortEnum;
}

/**
 * 
 */
export class ReferenceSecFilingFilesApi extends runtime.BaseAPI {

    /**
     * List filing files
     * SEC Filing Files
     */
    async listFilingFilesRaw(requestParameters: ListFilingFilesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListFilingFiles200Response>> {
        const queryParameters: any = {};

        if (requestParameters['sequence'] != null) {
            queryParameters['sequence'] = requestParameters['sequence'];
        }

        if (requestParameters['filename'] != null) {
            queryParameters['filename'] = requestParameters['filename'];
        }

        if (requestParameters['sequenceGte'] != null) {
            queryParameters['sequence.gte'] = requestParameters['sequenceGte'];
        }

        if (requestParameters['sequenceGt'] != null) {
            queryParameters['sequence.gt'] = requestParameters['sequenceGt'];
        }

        if (requestParameters['sequenceLte'] != null) {
            queryParameters['sequence.lte'] = requestParameters['sequenceLte'];
        }

        if (requestParameters['sequenceLt'] != null) {
            queryParameters['sequence.lt'] = requestParameters['sequenceLt'];
        }

        if (requestParameters['filenameGte'] != null) {
            queryParameters['filename.gte'] = requestParameters['filenameGte'];
        }

        if (requestParameters['filenameGt'] != null) {
            queryParameters['filename.gt'] = requestParameters['filenameGt'];
        }

        if (requestParameters['filenameLte'] != null) {
            queryParameters['filename.lte'] = requestParameters['filenameLte'];
        }

        if (requestParameters['filenameLt'] != null) {
            queryParameters['filename.lt'] = requestParameters['filenameLt'];
        }

        if (requestParameters['order'] != null) {
            queryParameters['order'] = requestParameters['order'];
        }

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        if (requestParameters['sort'] != null) {
            queryParameters['sort'] = requestParameters['sort'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["apiKey"] = await this.configuration.apiKey("apiKey"); // apiKey authentication
        }

        const response = await this.request({
            path: `/v1/reference/sec/filings/{filing_id}/files`.replace(`{${"filing_id"}}`, encodeURIComponent(String(requestParameters['filingId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ListFilingFiles200ResponseFromJSON(jsonValue));
    }

    /**
     * List filing files
     * SEC Filing Files
     */
    async listFilingFiles(requestParameters: ListFilingFilesRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListFilingFiles200Response> {
        const response = await this.listFilingFilesRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const ListFilingFilesOrderEnum = {
    Asc: 'asc',
    Desc: 'desc'
} as const;
export type ListFilingFilesOrderEnum = typeof ListFilingFilesOrderEnum[keyof typeof ListFilingFilesOrderEnum];
/**
 * @export
 */
export const ListFilingFilesSortEnum = {
    Sequence: 'sequence',
    Filename: 'filename'
} as const;
export type ListFilingFilesSortEnum = typeof ListFilingFilesSortEnum[keyof typeof ListFilingFilesSortEnum];
