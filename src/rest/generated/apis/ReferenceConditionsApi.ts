import getWithGlobals from "../../transport/getWithGlobals";
/**
 * Polygon API
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ListConditions200Response,
  ListConditions400Response,
} from '../models/index';
import {
    ListConditions200ResponseFromJSON,
    ListConditions200ResponseToJSON,
    ListConditions400ResponseFromJSON,
    ListConditions400ResponseToJSON,
} from '../models/index';

export interface ListConditionsRequest {
    assetClass?: ListConditionsAssetClassEnum;
    dataType?: ListConditionsDataTypeEnum;
    id?: number;
    sip?: ListConditionsSipEnum;
    order?: ListConditionsOrderEnum;
    limit?: number;
    sort?: ListConditionsSortEnum;
}

/**
 * 
 */
export class ReferenceConditionsApi extends runtime.BaseAPI {

    /**
     * List all conditions that Polygon.io uses.
     * Conditions
     */
    async listConditionsRaw(requestParameters: ListConditionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListConditions200Response>> {
        const queryParameters: any = {};

        if (requestParameters['assetClass'] != null) {
            queryParameters['asset_class'] = requestParameters['assetClass'];
        }

        if (requestParameters['dataType'] != null) {
            queryParameters['data_type'] = requestParameters['dataType'];
        }

        if (requestParameters['id'] != null) {
            queryParameters['id'] = requestParameters['id'];
        }

        if (requestParameters['sip'] != null) {
            queryParameters['sip'] = requestParameters['sip'];
        }

        if (requestParameters['order'] != null) {
            queryParameters['order'] = requestParameters['order'];
        }

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        if (requestParameters['sort'] != null) {
            queryParameters['sort'] = requestParameters['sort'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["apiKey"] = await this.configuration.apiKey("apiKey"); // apiKey authentication
        }

        const response = await this.request({
            path: `/v3/reference/conditions`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ListConditions200ResponseFromJSON(jsonValue));
    }

    /**
     * List all conditions that Polygon.io uses.
     * Conditions
     */
    async listConditions(requestParameters: ListConditionsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListConditions200Response> {
        const response = await this.listConditionsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const ListConditionsAssetClassEnum = {
    Stocks: 'stocks',
    Options: 'options',
    Crypto: 'crypto',
    Fx: 'fx'
} as const;
export type ListConditionsAssetClassEnum = typeof ListConditionsAssetClassEnum[keyof typeof ListConditionsAssetClassEnum];
/**
 * @export
 */
export const ListConditionsDataTypeEnum = {
    Trade: 'trade',
    Bbo: 'bbo',
    Nbbo: 'nbbo'
} as const;
export type ListConditionsDataTypeEnum = typeof ListConditionsDataTypeEnum[keyof typeof ListConditionsDataTypeEnum];
/**
 * @export
 */
export const ListConditionsSipEnum = {
    Cta: 'CTA',
    Utp: 'UTP',
    Opra: 'OPRA'
} as const;
export type ListConditionsSipEnum = typeof ListConditionsSipEnum[keyof typeof ListConditionsSipEnum];
/**
 * @export
 */
export const ListConditionsOrderEnum = {
    Asc: 'asc',
    Desc: 'desc'
} as const;
export type ListConditionsOrderEnum = typeof ListConditionsOrderEnum[keyof typeof ListConditionsOrderEnum];
/**
 * @export
 */
export const ListConditionsSortEnum = {
    AssetClass: 'asset_class',
    Id: 'id',
    Type: 'type',
    Name: 'name',
    DataTypes: 'data_types',
    Legacy: 'legacy'
} as const;
export type ListConditionsSortEnum = typeof ListConditionsSortEnum[keyof typeof ListConditionsSortEnum];
