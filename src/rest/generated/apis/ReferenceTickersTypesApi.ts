import getWithGlobals from "../../transport/getWithGlobals";
/**
 * Polygon API
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ListExchanges400Response,
  ListTickerTypes200Response,
} from '../models/index';
import {
    ListExchanges400ResponseFromJSON,
    ListExchanges400ResponseToJSON,
    ListTickerTypes200ResponseFromJSON,
    ListTickerTypes200ResponseToJSON,
} from '../models/index';

export interface ListTickerTypesRequest {
    assetClass?: ListTickerTypesAssetClassEnum;
    locale?: ListTickerTypesLocaleEnum;
}

/**
 * 
 */
export class ReferenceTickersTypesApi extends runtime.BaseAPI {

    /**
     * List all ticker types that Polygon.io has.
     * Ticker Types
     */
    async listTickerTypesRaw(requestParameters: ListTickerTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListTickerTypes200Response>> {
        const queryParameters: any = {};

        if (requestParameters['assetClass'] != null) {
            queryParameters['asset_class'] = requestParameters['assetClass'];
        }

        if (requestParameters['locale'] != null) {
            queryParameters['locale'] = requestParameters['locale'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["apiKey"] = await this.configuration.apiKey("apiKey"); // apiKey authentication
        }

        const response = await this.request({
            path: `/v3/reference/tickers/types`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ListTickerTypes200ResponseFromJSON(jsonValue));
    }

    /**
     * List all ticker types that Polygon.io has.
     * Ticker Types
     */
    async listTickerTypes(requestParameters: ListTickerTypesRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListTickerTypes200Response> {
        const response = await this.listTickerTypesRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const ListTickerTypesAssetClassEnum = {
    Stocks: 'stocks',
    Options: 'options',
    Crypto: 'crypto',
    Fx: 'fx',
    Indices: 'indices'
} as const;
export type ListTickerTypesAssetClassEnum = typeof ListTickerTypesAssetClassEnum[keyof typeof ListTickerTypesAssetClassEnum];
/**
 * @export
 */
export const ListTickerTypesLocaleEnum = {
    Us: 'us',
    Global: 'global'
} as const;
export type ListTickerTypesLocaleEnum = typeof ListTickerTypesLocaleEnum[keyof typeof ListTickerTypesLocaleEnum];
