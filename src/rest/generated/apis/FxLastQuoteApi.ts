import getWithGlobals from "../../transport/getWithGlobals";
/**
 * Polygon API
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  LastQuoteCurrencies200Response,
} from '../models/index';
import {
    LastQuoteCurrencies200ResponseFromJSON,
    LastQuoteCurrencies200ResponseToJSON,
} from '../models/index';

export interface LastQuoteCurrenciesRequest {
    from: string;
    to: string;
}

/**
 * 
 */
export class FxLastQuoteApi extends runtime.BaseAPI {

    /**
     * Get the last quote tick for a forex currency pair.
     * Last Quote for a Currency Pair
     */
    async lastQuoteCurrenciesRaw(requestParameters: LastQuoteCurrenciesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LastQuoteCurrencies200Response>> {
        if (requestParameters['from'] == null) {
            throw new runtime.RequiredError(
                'from',
                'Required parameter "from" was null or undefined when calling lastQuoteCurrencies().'
            );
        }

        if (requestParameters['to'] == null) {
            throw new runtime.RequiredError(
                'to',
                'Required parameter "to" was null or undefined when calling lastQuoteCurrencies().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["apiKey"] = await this.configuration.apiKey("apiKey"); // apiKey authentication
        }

        const response = await this.request({
            path: `/v1/last_quote/currencies/{from}/{to}`.replace(`{${"from"}}`, encodeURIComponent(String(requestParameters['from']))).replace(`{${"to"}}`, encodeURIComponent(String(requestParameters['to']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => LastQuoteCurrencies200ResponseFromJSON(jsonValue));
    }

    /**
     * Get the last quote tick for a forex currency pair.
     * Last Quote for a Currency Pair
     */
    async lastQuoteCurrencies(requestParameters: LastQuoteCurrenciesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LastQuoteCurrencies200Response> {
        const response = await this.lastQuoteCurrenciesRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
