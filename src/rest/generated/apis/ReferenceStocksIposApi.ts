import getWithGlobals from "../../transport/getWithGlobals";
/**
 * Polygon API
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ListIPOs200Response,
} from '../models/index';
import {
    ListIPOs200ResponseFromJSON,
    ListIPOs200ResponseToJSON,
} from '../models/index';

export interface ListIPOsRequest {
    ticker?: string;
    usCode?: string;
    isin?: string;
    listingDate?: Date;
    ipoStatus?: ListIPOsIpoStatusEnum;
    listingDateGte?: Date;
    listingDateGt?: Date;
    listingDateLte?: Date;
    listingDateLt?: Date;
    order?: ListIPOsOrderEnum;
    limit?: number;
    sort?: ListIPOsSortEnum;
}

/**
 * 
 */
export class ReferenceStocksIposApi extends runtime.BaseAPI {

    /**
     * The IPOs API provides access to detailed information about Initial Public Offerings (IPOs), including both upcoming and historical events. With this API, you can query for a comprehensive list of IPOs, along with key details such as the issuer name, ticker symbol, ISIN, IPO date, number of shares offered, expected price range, and final offering price. You can filter the results by status to focus on new, rumors, pending, historical, and more.
     * IPOs
     */
    async listIPOsRaw(requestParameters: ListIPOsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListIPOs200Response>> {
        const queryParameters: any = {};

        if (requestParameters['ticker'] != null) {
            queryParameters['ticker'] = requestParameters['ticker'];
        }

        if (requestParameters['usCode'] != null) {
            queryParameters['us_code'] = requestParameters['usCode'];
        }

        if (requestParameters['isin'] != null) {
            queryParameters['isin'] = requestParameters['isin'];
        }

        if (requestParameters['listingDate'] != null) {
            queryParameters['listing_date'] = (requestParameters['listingDate'] as any).toISOString().substring(0,10);
        }

        if (requestParameters['ipoStatus'] != null) {
            queryParameters['ipo_status'] = requestParameters['ipoStatus'];
        }

        if (requestParameters['listingDateGte'] != null) {
            queryParameters['listing_date.gte'] = (requestParameters['listingDateGte'] as any).toISOString().substring(0,10);
        }

        if (requestParameters['listingDateGt'] != null) {
            queryParameters['listing_date.gt'] = (requestParameters['listingDateGt'] as any).toISOString().substring(0,10);
        }

        if (requestParameters['listingDateLte'] != null) {
            queryParameters['listing_date.lte'] = (requestParameters['listingDateLte'] as any).toISOString().substring(0,10);
        }

        if (requestParameters['listingDateLt'] != null) {
            queryParameters['listing_date.lt'] = (requestParameters['listingDateLt'] as any).toISOString().substring(0,10);
        }

        if (requestParameters['order'] != null) {
            queryParameters['order'] = requestParameters['order'];
        }

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        if (requestParameters['sort'] != null) {
            queryParameters['sort'] = requestParameters['sort'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["apiKey"] = await this.configuration.apiKey("apiKey"); // apiKey authentication
        }

        const response = await this.request({
            path: `/vX/reference/ipos`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ListIPOs200ResponseFromJSON(jsonValue));
    }

    /**
     * The IPOs API provides access to detailed information about Initial Public Offerings (IPOs), including both upcoming and historical events. With this API, you can query for a comprehensive list of IPOs, along with key details such as the issuer name, ticker symbol, ISIN, IPO date, number of shares offered, expected price range, and final offering price. You can filter the results by status to focus on new, rumors, pending, historical, and more.
     * IPOs
     */
    async listIPOs(requestParameters: ListIPOsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListIPOs200Response> {
        const response = await this.listIPOsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const ListIPOsIpoStatusEnum = {
    DirectListingProcess: 'direct_listing_process',
    History: 'history',
    New: 'new',
    Pending: 'pending',
    Postponed: 'postponed',
    Rumor: 'rumor',
    Withdrawn: 'withdrawn'
} as const;
export type ListIPOsIpoStatusEnum = typeof ListIPOsIpoStatusEnum[keyof typeof ListIPOsIpoStatusEnum];
/**
 * @export
 */
export const ListIPOsOrderEnum = {
    Asc: 'asc',
    Desc: 'desc'
} as const;
export type ListIPOsOrderEnum = typeof ListIPOsOrderEnum[keyof typeof ListIPOsOrderEnum];
/**
 * @export
 */
export const ListIPOsSortEnum = {
    ListingDate: 'listing_date',
    Ticker: 'ticker',
    LastUpdated: 'last_updated',
    SecurityType: 'security_type',
    IssuerName: 'issuer_name',
    CurrencyCode: 'currency_code',
    Isin: 'isin',
    UsCode: 'us_code',
    FinalIssuePrice: 'final_issue_price',
    MinSharesOffered: 'min_shares_offered',
    MaxSharesOffered: 'max_shares_offered',
    LowestOfferPrice: 'lowest_offer_price',
    HighestOfferPrice: 'highest_offer_price',
    TotalOfferSize: 'total_offer_size',
    SharesOutstanding: 'shares_outstanding',
    PrimaryExchange: 'primary_exchange',
    LotSize: 'lot_size',
    SecurityDescription: 'security_description',
    IpoStatus: 'ipo_status',
    AnnouncedDate: 'announced_date'
} as const;
export type ListIPOsSortEnum = typeof ListIPOsSortEnum[keyof typeof ListIPOsSortEnum];
