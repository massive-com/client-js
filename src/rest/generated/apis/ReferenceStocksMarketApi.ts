import getWithGlobals from "../../transport/getWithGlobals";
/**
 * Polygon API
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GetMarketHolidays200ResponseInner,
  GetMarketStatus200Response,
} from '../models/index';
import {
    GetMarketHolidays200ResponseInnerFromJSON,
    GetMarketHolidays200ResponseInnerToJSON,
    GetMarketStatus200ResponseFromJSON,
    GetMarketStatus200ResponseToJSON,
} from '../models/index';

/**
 * 
 */
export class ReferenceStocksMarketApi extends runtime.BaseAPI {

    /**
     * Get upcoming market holidays and their open/close times.
     * Market Holidays
     */
    async getMarketHolidaysRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<GetMarketHolidays200ResponseInner>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["apiKey"] = await this.configuration.apiKey("apiKey"); // apiKey authentication
        }

        const response = await this.request({
            path: `/v1/marketstatus/upcoming`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(GetMarketHolidays200ResponseInnerFromJSON));
    }

    /**
     * Get upcoming market holidays and their open/close times.
     * Market Holidays
     */
    async getMarketHolidays(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<GetMarketHolidays200ResponseInner>> {
        const response = await this.getMarketHolidaysRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get the current trading status of the exchanges and overall financial markets.
     * Market Status
     */
    async getMarketStatusRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetMarketStatus200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["apiKey"] = await this.configuration.apiKey("apiKey"); // apiKey authentication
        }

        const response = await this.request({
            path: `/v1/marketstatus/now`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetMarketStatus200ResponseFromJSON(jsonValue));
    }

    /**
     * Get the current trading status of the exchanges and overall financial markets.
     * Market Status
     */
    async getMarketStatus(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetMarketStatus200Response> {
        const response = await this.getMarketStatusRaw(initOverrides);
        return await response.value();
    }

}
