import getWithGlobals from "../../transport/getWithGlobals";
/**
 * Polygon API
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  LastTradeOptions200Response,
} from '../models/index';
import {
    LastTradeOptions200ResponseFromJSON,
    LastTradeOptions200ResponseToJSON,
} from '../models/index';

export interface LastTradeOptionsRequest {
    optionsTicker: string;
}

/**
 * 
 */
export class OptionsLastTradeApi extends runtime.BaseAPI {

    /**
     * Get the most recent trade for a given options contract.
     * Last Trade
     */
    async lastTradeOptionsRaw(requestParameters: LastTradeOptionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LastTradeOptions200Response>> {
        if (requestParameters['optionsTicker'] == null) {
            throw new runtime.RequiredError(
                'optionsTicker',
                'Required parameter "optionsTicker" was null or undefined when calling lastTradeOptions().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["apiKey"] = await this.configuration.apiKey("apiKey"); // apiKey authentication
        }

        const response = await this.request({
            path: `/v2/last/trade/{optionsTicker}`.replace(`{${"optionsTicker"}}`, encodeURIComponent(String(requestParameters['optionsTicker']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => LastTradeOptions200ResponseFromJSON(jsonValue));
    }

    /**
     * Get the most recent trade for a given options contract.
     * Last Trade
     */
    async lastTradeOptions(requestParameters: LastTradeOptionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LastTradeOptions200Response> {
        const response = await this.lastTradeOptionsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
