import getWithGlobals from "../../transport/getWithGlobals";
/**
 * Polygon API
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ListFilingFiles200ResponseResultsInner,
} from '../models/index';
import {
    ListFilingFiles200ResponseResultsInnerFromJSON,
    ListFilingFiles200ResponseResultsInnerToJSON,
} from '../models/index';

export interface GetFilingFileRequest {
    filingId?: string;
    fileId?: string;
}

/**
 * 
 */
export class ReferenceSecFilingFileApi extends runtime.BaseAPI {

    /**
     * Get filing file
     * SEC Filing File
     */
    async getFilingFileRaw(requestParameters: GetFilingFileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListFilingFiles200ResponseResultsInner>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["apiKey"] = await this.configuration.apiKey("apiKey"); // apiKey authentication
        }

        const response = await this.request({
            path: `/v1/reference/sec/filings/{filing_id}/files/{file_id}`.replace(`{${"filing_id"}}`, encodeURIComponent(String(requestParameters['filingId']))).replace(`{${"file_id"}}`, encodeURIComponent(String(requestParameters['fileId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ListFilingFiles200ResponseResultsInnerFromJSON(jsonValue));
    }

    /**
     * Get filing file
     * SEC Filing File
     */
    async getFilingFile(requestParameters: GetFilingFileRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListFilingFiles200ResponseResultsInner> {
        const response = await this.getFilingFileRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
